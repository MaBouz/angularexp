1.	Mise à jour du système : Avant de commencer, assurez-vous que votre système Ubuntu est à jour en exécutant les commandes suivantes :
sudo apt update
sudo apt upgrade
2.	Installation de Docker : Kubernetes utilise Docker pour exécuter les conteneurs. Vous pouvez installer Docker à l'aide des commandes suivantes :
sudo apt install docker.io
sudo systemctl enable docker
sudo systemctl start docker
3.	Installation de kubeadm, kubelet et kubectl : Ce sont les outils nécessaires pour installer et gérer un cluster Kubernetes. Vous pouvez les installer en exécutant les commandes suivantes :
sudo apt install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
4.	Initialisation du master : Maintenant, vous pouvez initialiser votre nœud comme un maître Kubernetes en utilisant la commande kubeadm init. Par exemple :
sudo kubeadm init --pod-network-cidr=10.244.0.0/16
Notez que --pod-network-cidr est utilisé pour spécifier la plage IP pour le réseau pod. Vous pouvez utiliser une autre plage IP si celle-ci est déjà en conflit.
5.	Configuration du fichier kubeconfig : Après avoir initialisé le maître, vous devez configurer le fichier kubeconfig en exécutant les commandes suivantes :
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
6.	Installation d'un réseau pod : Pour que les pods communiquent entre eux, vous devez installer un plugin réseau. Par exemple, vous pouvez utiliser Flannel :
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
Après avoir suivi ces étapes, vous aurez un maître Kubernetes fonctionnel sur votre système Ubuntu. Vous pouvez vérifier l'état du maître en exécutant kubectl get nodes.
Questions :
1.	Comment puis-je ajouter des nœuds au cluster une fois que le maître est installé ?
2.	Quels sont les prérequis matériels recommandés pour exécuter un maître Kubernetes ?
3.	Existe-t-il d'autres options de réseau pod disponibles en dehors de Flannel ?
•	installation de deux noeuds et un master
Pour installer deux nœuds et un maître Kubernetes, suivez les étapes ci-dessous :
1.	Prérequis :
o	Assurez-vous que les machines sur lesquelles vous prévoyez d'installer Kubernetes exécutent Ubuntu ou une distribution Linux prise en charge.
o	Les machines doivent disposer d'une connectivité réseau pour communiquer entre elles.
o	Il est recommandé d'avoir au moins 2 Go de RAM et 2 vCPU sur chaque machine.
o	Désactivez le swap sur toutes les machines du cluster Kubernetes.
2.	Installation du maître Kubernetes :
o	Suivez les étapes d'installation du maître Kubernetes que j'ai décrites précédemment dans ma réponse précédente.
o	Assurez-vous que le maître est correctement initialisé et en ligne.
3.	Installation des nœuds Kubernetes :
o	Sur chaque nœud, suivez les étapes d'installation de Docker que j'ai décrites dans ma réponse précédente.
o	Installez kubeadm, kubelet et kubectl sur chaque nœud en exécutant les commandes suivantes :
o	sudo apt install -y apt-transport-https curl
o	curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
o	echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
o	sudo apt update
o	sudo apt install -y kubelet kubeadm kubectl
o	sudo apt-mark hold kubelet kubeadm kubectl
o	Sur chaque nœud, exécutez la commande kubeadm join que vous avez obtenu lors de l'initialisation du maître pour joindre le cluster. Par exemple :
o	sudo kubeadm join <adresse IP du maître>:<port> --token <token> --discovery-token-ca-cert-hash <hash>
Le <token> et <hash> spécifiques seront uniques pour votre cluster, donc utilisez ceux qui sont générés lors de l'initialisation de votre maître.
